import OpenAI from 'openai';

const openai = new OpenAI({
    apiKey: '', // Replace with your OpenAI API key
    dangerouslyAllowBrowser: true
});

const submitButton = document.getElementById('submit-button') as HTMLButtonElement;
const captchaInput = document.getElementById('captcha-input') as HTMLTextAreaElement;
const responseContainer = document.getElementById('response-container') as HTMLDivElement;
const resultContainer = document.getElementById('result-container') as HTMLDivElement;

if (submitButton && captchaInput && responseContainer && resultContainer) {
    console.log('Elements found:', { submitButton, captchaInput, responseContainer, resultContainer });

    submitButton.addEventListener('click', async () => {
        console.log('Submitting captcha...');
        const userText = captchaInput.value.trim();
        if (!userText) {
            responseContainer.innerHTML = "Please enter some text.";
            return;
        }

        try {
            const response = await openai.chat.completions.create({
                model: 'gpt-4o',
                messages: [
                    { role: 'system', content: 'You are an AI CAPTCHA verifier. Analyze the given text and determine with precision if it was likely generated by a human or an AI. Assess creativity, natural language flow, and depth of intent. Be highly critical, focusing on subtleties like emotion, nuance, and authenticity. Carefully scrutinize whether the thought process reflects human-like reasoning or algorithmic patterns. Your evaluation must be concise, focused, and no longer than 100 words. Append !PASSED! if the text is human-like and !FAILED! if it is AI-generated.' },
                    { role: 'user', content: userText }
                ],
                max_tokens: 100,
            });

            const responseText = response.choices?.[0]?.message?.content?.trim() || "No response from AI.";
            animateText(responseText.replace(/!PASSED!|!FAILED!/, '')); // Remove markers before displaying
            responseContainer.classList.add('filled');
            renderResult(responseText); // Render result based on markers
        } catch (error) {
            console.error('Error with OpenAI API:', error);
            responseContainer.innerHTML = "Something went wrong, please try again later.";
        }
    });

    captchaInput.addEventListener('input', () => autoExpand(captchaInput));
} else {
    console.error('Required elements not found in the DOM.');
}

function autoExpand(textarea: HTMLTextAreaElement) {
    textarea.style.height = 'auto';
    textarea.style.height = textarea.scrollHeight + 'px';
}

function animateText(text: string) {
    responseContainer.innerHTML = ''; // Clear previous content
    resultContainer.innerHTML = ''; // Clear previous result
    let currentIndex = 0;

    function renderNextChar() {
        if (currentIndex < text.length) {
            const char = text[currentIndex];
            const span = document.createElement('span');
            span.textContent = char;
            responseContainer.appendChild(span);
            currentIndex++;
            setTimeout(renderNextChar, 50); // Adjust the delay as needed
        }
    }

    responseContainer.style.textAlign = 'center';
    renderNextChar();
}

function renderResult(text: string) {
    const isHuman = text.endsWith('!PASSED!');
    const resultMessage = document.createElement('div');
    resultMessage.style.fontSize = '1.5em';
    resultMessage.style.fontWeight = 'bold';
    resultMessage.style.textAlign = 'center';
    resultMessage.style.marginTop = '20px';

    if (isHuman) {
        resultMessage.style.color = 'lime'; // Neon green
        resultMessage.innerHTML = 'CAPTCHA PASSED &#x2714;'; // Checkmark
    } else {
        resultMessage.style.color = 'red'; // Neon red
        resultMessage.innerHTML = 'CAPTCHA FAILED &#x274C;'; // Cross
    }

    resultContainer.appendChild(resultMessage);
}